<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.dao.UserDao">

    <!--sql片段-->
    <sql id="userColumns">id,username,sal,birthday</sql>
    <insert id="save" parameterType="UserPOJO" useGeneratedKeys="true" keyProperty="id">
        insert into user(username,sal,birthday) values(#{username},#{sal},#{birthday})
    </insert>
    <update id="update" parameterType="UserPOJO" flushCache="false">
        update user set username=#{username},sal=#{sal},birthday=#{birthday} where id=#{id}
    </update>
    <delete id="delete" parameterType="UserPOJO">
        delete from user where id=#{id}
    </delete>


    <resultMap id="userResultMap" type="UserPOJO">
        <id column="ID" jdbcType="INTEGER" property="id" javaType="int"/>
        <result column="USERNAME" jdbcType="VARCHAR" property="username" javaType="string"/>
        <result column="SAL" jdbcType="DECIMAL" property="sal" javaType="java.math.BigDecimal"/>
        <result column="BIRTHDAY" jdbcType="DATE" property="birthday" javaType="java.util.Date"/>
    </resultMap>

    <select id="findById" parameterType="map" resultMap="userResultMap">
        select
        <include refid="userColumns"/>
        from user where id=#{userId} and #{randNum}=#{randNum}
    </select>

    <select id="findByName" parameterType="String" resultType="UserPOJO">
        select
        <include refid="userColumns"/>
        from user where username like concat('%',#{username},'%')
    </select>
    <!--多个参数时，可以使用VO class PageVO{private int page;private int size;} ，也可以使用map-->
    <select id="findByPage" resultType="UserPOJO" parameterType="PageVO" useCache="true" flushCache="false">
        select
        <include refid="userColumns"/>
        from user limit #{pstart},#{size}
    </select>
    <select id="findAll" resultType="UserPOJO">
        select
        <include refid="userColumns"/>
        from user
    </select>


</mapper>